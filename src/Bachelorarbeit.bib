%! Author = pfischer
%! Date = 8/27/22

@misc{datenschutzimgesundeitswesen,
    title = {Datenschutz im Gesundheitswesen},
    howpublished={https://www.service-medical.de/datenschutz-im-gesundheitswesen/},
    note = {Accessed: 2022-11-04}
}

@misc{ehealthgesetz,
    title = {E-Health-Gesetz},
    howpublished={https://www.bundesgesundheitsministerium.de/service/begriffe-von-a-z/e/e-health-gesetz.html},
    note = {Accessed: 2022-11-04}
}

@misc{timessenger,
    title = {TI-Messenger},
    howpublished={https://www.gematik.de/anwendungen/ti-messenger},
    note = {Accessed: 2022-11-04}
}

@article{dazer2012restful,
    title={RESTful APIs-Eine {\"U}bersicht},
    author={Dazer, Michael},
    journal={url: http://snet. tuberlin. de/fileadmin/fg220/courses/WS1112/snet-project/restful-apis\_ dazer. pdf (besucht am 01. 08. 2016)},
    year={2012}
}

@article{https://doi.org/10.48550/arxiv.1408.5786,
doi = {10.48550/ARXIV.1408.5786},

url = {https://arxiv.org/abs/1408.5786},

author = {Qureshi, M. Rizwan Jameel and Sabir, Fatima},

keywords = {Software Engineering (cs.SE), FOS: Computer and information sciences, FOS: Computer and information sciences},

title = {A comparison of model view controller and model view presenter},

publisher = {arXiv},

year = {2014},

copyright = {arXiv.org perpetual, non-exclusive license}
}

@ARTICLE{docker,
author={Anderson, Charles},
journal={IEEE Software},
title={Docker [Software engineering]},
year={2015},
volume={32},
number={3},
pages={102-c3},
doi={10.1109/MS.2015.62}}
%% Seite 1 + 3

@misc{matrixfaq,
title = {Frequently Asked Questions},
howpublished={https://matrix.org/faq/},
note = {Accessed: 2022-11-02}
}

@misc{cocoapods1,
    title = {Get on with building your app, not duplicating code.},
    howpublished={https://cocoapods.org/about},
    note = {Accessed: 2022-11-04}
}

@misc{cocoapods2,
    title = {WHAT IS COCOAPODS},
    howpublished={https://cocoapods.org/},
    note = {Accessed: 2022-11-04}
}

@misc{cocoapods3,
    title = {Making a CocoaPod},
    howpublished={https://guides.cocoapods.org/making/making-a-cocoapod.html},
    note = {Accessed: 2022-11-04}
}

@misc{xcode,
    title = {Xcode},
    howpublished={https://worldofvr.de/xcode/},
    note = {Accessed: 2022-11-08}
}

@Inbook{Cahill2021,
    author="Cahill, Bear",
    title="Introducing SwiftUI",
    bookTitle="UI Design for iOS App Development: Using SwiftUI",
    year="2021",
    publisher="Apress",
    address="Berkeley, CA",
    pages="1--5",
    abstract="First, thank you for reading at least this much of the first chapter. It's tempting to skip it. However, I'm the type of person that reads the foreword, the preface, and so on. Someone thought it important enough to write and include it; maybe it's worth it.",
    isbn="978-1-4842-6449-2",
    doi="10.1007/978-1-4842-6449-2_1",
    url="https://doi.org/10.1007/978-1-4842-6449-2_1"
}

@Inbook{Varma2019,
    author="Varma, Jayant",
    title="What Is SwiftUI",
    bookTitle="SwiftUI for Absolute Beginners: Program Controls and Views for iPhone, iPad, and Mac Apps",
    year="2019",
    publisher="Apress",
    address="Berkeley, CA",
    pages="1--8",
    abstract="In this chapter, we'll review the principles of SwiftUI and why it came into being. You'll see the advantages that it offers over traditional methodologies of development and how easy it is to write UI without having to worry much about it in a much more declarative manner.",
    isbn="978-1-4842-5516-2",
    doi="10.1007/978-1-4842-5516-2_1",
    url="https://doi.org/10.1007/978-1-4842-5516-2_1"
}

@Inbook{Goodwill2015,
    author="Goodwill, James
and Matlock, Wesley",
    title="The Swift Programming Language",
    bookTitle="Beginning Swift Games Development for iOS",
    year="2015",
    publisher="Apress",
    address="Berkeley, CA",
    pages="219--244",
    abstract="Swift is Apple's new programming language intended to be the future replacement of Objective-C for Mac and iOS development. Some people are referring to it as a functional programming language, but it is actually an object-oriented programming language with a healthy dose of generic programming.",
    isbn="978-1-4842-0400-9",
    doi="10.1007/978-1-4842-0400-9_17",
    url="https://doi.org/10.1007/978-1-4842-0400-9_17"
}

@Inbook{Anderson2012,
    author="Anderson, Chris",
    title="The Model-View-ViewModel (MVVM) Design Pattern",
    bookTitle="Pro Business Applications with Silverlight 5",
    year="2012",
    publisher="Apress",
    address="Berkeley, CA",
    pages="461--499",
    abstract="Few topics surrounding Silverlight are so widely discussed as the Model-View-ViewModel (MVVM) design pattern. This pattern is used by many Silverlight, Windows Phone 7, and WPF developers, and even JavaScript libraries are starting to appear that enable HTML applications to make use of the pattern. The blogosphere is overflowing with posts on this topic, with so many differing and varied opinions on how it should be implemented that you might become a little overwhelmed. Adding to this confusion is the fact that the project templates in Visual Studio do not facilitate using the MVVM design pattern out of the box, and with no information on the amount of prerequisite Silverlight knowledge required to implement it effectively, many developers new to Silverlight shun the pattern until they become more experienced in the technology. However, there is general agreement in the development community that, regardless of how you implement the pattern, doing so is good practice. Developers who implement this pattern invariably say that their code is much better for it.",
    isbn="978-1-4302-3501-9",
    doi="10.1007/978-1-4302-3501-9_13",
    url="https://doi.org/10.1007/978-1-4302-3501-9_13"
}

@Inbook{Hoefling2022,
    author="Hoefling, Skye",
    title="Model-View-ViewModel (MVVM)",
    bookTitle="Getting Started with the Uno Platform and WinUI 3: Hands-On Building of Cross-Platform Desktop, Mobile, and Web Applications That Can Run Anywhere ",
    year="2022",
    publisher="Apress",
    address="Berkeley, CA",
    pages="191--206",
    abstract="In the last few chapters, we have been building our main application dashboard and login page. We are now ready to start architecting our application to support scalable design patterns that separate the user interface code from business rules and code that communicates with the Microsoft Graph for OneDrive APIs.",
    isbn="978-1-4842-8248-9",
    doi="10.1007/978-1-4842-8248-9_8",
    url="https://doi.org/10.1007/978-1-4842-8248-9_8"
}


@misc{matrixiossdk,
    title = {Matrix.org iOS SDK},
    howpublished={https://matrix.org/sdks/\#matrix-org-i-os-sdk},
    note = {Accessed: 2022-11-04}
}
@misc{olm,
    title = {Olm: A Cryptographic Ratchet},
    howpublished={https://gitlab.matrix.org/matrix-org/olm/blob/master/docs/olm.md},
    note = {Accessed: 2022-11-09}
}
@misc{megolm,
    title = {Megolm group ratchet},
    howpublished={https://gitlab.matrix.org/matrix-org/olm/blob/master/docs/megolm.md},
    note = {Accessed: 2022-11-09}
}

@article{perrin2016double,
    title={The double ratchet algorithm},
    author={Perrin, Trevor and Marlinspike, Moxie},
    journal={GitHub wiki},
    year={2016}
}

@misc{matrix,
    title = {An open network for secure, decentralized communication},
    howpublished={https://matrix.org/},
    note = {Accessed: 2022-11-02}
}

@misc{matrix-end-to-end-encryption,
    title = {End-to-End Encryption implementation guide},
    howpublished={https://matrix.org/docs/guides/end-to-end-encryption-implementation-guide},
    note = {Accessed: 2022-11-08}
}

@misc{mvc,
    title = {Model-View-Controller-Paradigma},
    howpublished={https://glossar.hs-augsburg.de/Model-View-Controller-Paradigma},
    note = {Accessed: 2022-10-03}
}
@misc{mvp1,
    title = {Model-View-Presenter Design Pattern},
    howpublished={https://support.touchgfx.com/4.14/docs/development/ui-development/software-architecture/model-view-presenter-design-pattern},
    note = {Accessed: 2022-10-03}
}
@misc{mvp2,
title = {MV-Patterns â€“ Frontend-Designs in Aktion},
howpublished={https://www.informatik-aktuell.de/entwicklung/methoden/mv-patterns-frontend-designs-in-aktion.html},
note = {Accessed: 2022-10-03}
}
@misc{matrixevents,
title = {Events},
howpublished={https://spec.matrix.org/v1.4/\#events},
note = {Accessed: 2022-10-03}
}
@misc{synapseregistartiontoken,
title = {Registration Tokens},
howpublished={https://matrix-org.github.io/synapse/latest/usage/administration/admin\_api/registration\_tokens.htmls},
note = {Accessed: 2022-10-06}
}
@misc{advancede2e,
title = {Implementing more advanced e2ee features, such as cross-signing},
howpublished={https://matrix.org/docs/guides/implementing-more-advanced-e-2-ee-features-such-as-cross-signing},
note = {Accessed: 2022-10-08}
}

